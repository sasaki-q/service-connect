version: 0.2
phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region ${AWS_DEFAULT_REGION})
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${REPOSITORY_NAME}
      - IMAGE_TAG=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      - echo IMAGE_TAG = $IMAGE_TAG
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - cd app
      - docker build -f docker/Dockerfile.build -t ${REPOSITORY_NAME}:${IMAGE_TAG} --build-arg BuildImage=${BUILD_IMAGE_ARN} --build-arg ProductionImage=${PRODUCTION_IMAGE_ARN} .
      - docker tag ${REPOSITORY_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}
      - cd ..
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - aws ecs describe-task-definition --task-definition ${TASK_DEFINITION_ARN} --query taskDefinition | jq '.containerDefinitions[0].image="<IMAGE1_NAME>"' > taskdef.json
      - >-
        printf "[{\"name\":\"${CONTAINER_NAME}\",\"ImageURI\":\"%s\"}]"
        ${REPOSITORY_URI}:${IMAGE_TAG}
        > imageDetails.json
artifacts:
  files: 
    - imageDetails.json
    - taskdef.json